{
	"name": "expression2",
	"description" : "expression with variable, data type",
	"tasks": [
		{
			"type" : "expression",
			"name" : "main",
			"steps" : [
				{
					"type" : "expression",
					"expression": "!(test.string)!.subString(&(base)&,from:?(fromVar)?,to:&(to)&)",
				}
			]
		}
	],
	"constants": {
		"base": {
			"dataTypeId": "test.string",
			"value": "This is my world!"
		},
		"from": {
			"dataTypeId": "test.integer",
			"value": "3"
		},
		"to": {
			"dataTypeId": "test.integer",
			"value": "7"
		}
	},
	"variables" : {
		"fromVar": "test.integer"
	},
	"variablesData" : {
		"fromVar": {
			"dataTypeId": "test.integer",
			"value": "3"
		},
	},
	"result" : {
		"dataTypeId": "test.string;1.0.0",
 		"value": "s isfff",
		"wapperType": "JSON"
	}
}
